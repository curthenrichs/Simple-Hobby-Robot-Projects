/**
 * Webpage
 * @author Curt Henrichs
 * @date 8-18-17
 *
 * Webpage header file contains the HTML pages to be served up when in access
 * point mode. All HTML pages are recorded as constant c-strings.
 */

#ifndef WEBPAGE_H
#define WEBPAGE_H

//==============================================================================
//                                 Libraries
//==============================================================================

#include <Arduino.h>

//==============================================================================
//                           Constant HTML Strings
//==============================================================================

/**
 * Index webpage will provide the configuration parameters when in access point
 * mode. Webpage will serve up a response form to go to /submit uri
 */
const char ROOT_WEBPAGE[] = ""
"<!DOCTYPE html>\n"
"<html>\n"
"<head>\n"
"<title>ORION Controller</title>\n"
"<meta name=\"viewport\" content=\"width=device-width, initial-scale=0.9, \n"
"  maximum-scale=0.9, user-scalable=0\">\n"
"<script>\n"
"\n"
"const MAX_DAMPING_VALUE = 1.0;\n"
"const MIN_DAMPING_VALUE = 0.0;\n"
"const DEFAULT_DAMPING_VALUE = 0.5;\n"
"const CIRCLE_SIZE = 25;\n"
"const CIRCLE_COLOR = '#ff0000';\n"
"\n"
"var socket = new WebSocket('ws://192.168.0.1:5000',['arduino']);\n"
"socket.onopen = function () {\n"
"  var obj = {'connected': new Date()};\n"
"  var str = JSON.stringify(obj);\n"
"  socket.send(str);\n"
"  console.log(str);\n"
"};\n"
"socket.onerror = function (error) {\n"
"  console.log('WebSocket Error ', error);\n"
"};\n"
"socket.onmessage = function (e) {\n"
"  console.log('Server: ', e.data);\n"
"};\n"
"socket.onclose = function () {\n"
"  console.log('Websocket connection closed');\n"
"};\n"
"\n"
"window.setInterval(function () {\n"
"  var obj = {'connection':true};\n"
"  var str = JSON.stringify(obj);\n"
"  socket.send(str);\n"
"  console.log(str);\n"
"}, 50)\n"
"\n"
"function clickDraw(e) {\n"
"  var canvas = document.getElementById('joystick');\n"
"  var context = canvas.getContext('2d');\n"
"  var boundingRectangle = canvas.getBoundingClientRect();\n"
"\n"
"  var x = e.clientX - boundingRectangle.left;\n"
"  var y = e.clientY - boundingRectangle.top;\n"
"\n"
"  context.clearRect(0, 0, canvas.width, canvas.height);\n"
"\n"
"  context.fillStyle = CIRCLE_COLOR;\n"
"  context.beginPath();\n"
"  context.arc(x, y, CIRCLE_SIZE, 0, 2 * Math.PI);\n"
"  context.fill();\n"
"}\n"
"\n"
"function stopDraw(){\n"
"  var canvas = document.getElementById('joystick');\n"
"  var context = canvas.getContext('2d');\n"
"  context.clearRect(0, 0, canvas.width, canvas.height);\n"
"  context.fillStyle = CIRCLE_COLOR;\n"
"  context.beginPath();\n"
"  context.arc(canvas.width/2, canvas.height/2, CIRCLE_SIZE, 0, 2 * Math.PI);\n"
"  context.fill();\n"
"}\n"
"\n"
"function joystickMove(event){\n"
"  clickDraw(event);\n"
"\n"
"  // get raw axis information\n"
"  var x = event.clientX - joystick.getBoundingClientRect().left - 150;\n"
"  x = Math.min(Math.max(x,-100),100); //clamp\n"
"  var y = -1 * (event.clientY - joystick.getBoundingClientRect().top - 150);\n"
"  y = Math.min(Math.max(y,-100),100); //clamp\n"
"\n"
"  // scale by user defined damping\n"
"  var dampingStr = document.getElementById('damping').value;\n"
"  var dampingNum = parseFloat(dampingStr);\n"
"  if(isNaN(dampingNum)){\n"
"    dampingNum = 0;\n"
"  }\n"
"  x = x * dampingNum;\n"
"  y = y * dampingNum;\n"
"\n"
"  //send JSON message\n"
"  var obj = {'x':x, 'y':y};\n"
"  var str = JSON.stringify(obj);\n"
"  socket.send(str);\n"
"  console.log(str);\n"
"  var pointStr = 'X : ' + x.toFixed(2);\n"
"      pointStr = pointStr + ', Y : ' + y.toFixed(2);\n"
"  document.getElementById('joystickCurrentPoint').innerHTML = pointStr;\n"
"}\n"
"\n"
"function joystickStop(){\n"
"  stopDraw();\n"
"\n"
"  var obj = {'x':0, 'y':0};\n"
"  var str = JSON.stringify(obj);\n"
"  socket.send(str);\n"
"  console.log(str);\n"
"  var pointStr = 'X : 0.00';\n"
"      pointStr = pointStr + ', Y : 0.00';\n"
"  document.getElementById('joystickCurrentPoint').innerHTML = pointStr;\n"
"}\n"
"\n"
"</script>\n"
"<style>\n"
"#joystick-container {\n"
"  border: solid 1px #000;\n"
"  display: inline-block;\n"
"}\n"
"#joystick {\n"
"  margin: 1px;\n"
"  cursor: crosshair;\n"
"}\n"
"#estop {\n"
"  width: 350px;\n"
"}\n"
"#damping {\n"
"  text-align:right;\n"
"}\n"
"#powerscaler {\n"
"  display: table-cell;\n"
"  vertical-align: middle;\n"
"}\n"
"#labels {\n"
"  vertical-align: middle;\n"
"}\n"
"#damping {\n"
"  vertical-align: middle;\n"
"}\n"
"#estop {\n"
"  font-size: 20px;\n"
"}\n"
"\n"
"</style>\n"
"</head>\n"
"<body>\n"
"<center width=\"100%\">\n"
"<h1>ORION Controller</h1>\n"
"<button type=\"button\" id=\"estop\" onclick=\"joystickStop()\">STOP</button>\n"
"<p></p>\n"
"<div id=\"joystick-container\">\n"
"<canvas id=\"joystick\" width=\"300\" height=\"300\"></canvas>\n"
"</div>\n"
"<script>\n"
"  var joystick = document.getElementById('joystick');\n"
"  joystick.addEventListener('pointerup',joystickMove,event);\n"
"  stopDraw();\n"
"</script>\n"
"<p id=\"joystickCurrentPoint\">X : 0.00, Y : 0.00</p>\n"
"<div id=\"powerscaler\">\n"
"<label id=\"labels\" for=\"damping\">Power Scaler:</label>\n"
"<input type=\"range\" name=\"damping\" id=\"damping\"\n"
"   max=\"1\" min=\"0\" step=\"0.01\" defaultValue=\"0.5\" >\n"
"</div>\n"
"</center>\n"
"</body>\n"
"</html>\n";

#endif
